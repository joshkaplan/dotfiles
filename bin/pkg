#!/usr/bin/env zsh
set -e
CURRENT_DIR=$(cd "$(dirname "${0:A}")" && pwd)  # https://tinyurl.com/y5kkhfrd, https://tinyurl.com/ydxeax8k
BASEDIR="$(cd $CURRENT_DIR/.. && pwd)"
PRIVATE_BASEDIR="${BASEDIR}-private"
source "${BASEDIR}/utils/output.zsh"
source "${BASEDIR}/utils/utils.zsh"
source "${BASEDIR}/utils/pkg_utils.zsh"

declare -A DEFAULT_FILES
DEFAULT_FILES[pip]="${BASEDIR}/packages/pip_packages.txt"
DEFAULT_FILES[brew]="${BASEDIR}/packages/Brewfile"

# Process args
ORIG_ARGS=$*
zparseopts -D -E -- f:=FILE t:=PKG_TYPE F=FAST_MODE U=UPGRADE_MODE u=UPDATE_MODE I=INSTALL_MODE S=SAVE_MODE h=HELP_MODE d=DEBUG_MODE
if [[ $HELP_MODE ]]; then 
#	echo "By default, updates packaage managers and checks pacakge diffs"
	echo "\nUsage:"
	echo "    pkg_sync [-t type] [-f file] [options]"
	echo "\nOptions:"
	echo "    -h  show this help"
	echo "    -t  type (brew, pip, defaults to all)"
	echo "    -f  install file (uses default when possible)"
	echo "    -F  fast/force mode (skips prompts)"
	echo "\nActions:"
	echo "(Runs all if none are specified. If multiple run, will run in this order.)"
	echo "    -u  update package managers"
	echo "    -I  install packages from file"
	echo "    -U  upgrade local packages"
	echo "    -S  save local packages to file"
	return 0
fi

if [[ -n $* ]]; then
	error "Unknown options $*"
	return 1
fi

# if type not set, run for all
if [[ -z $PKG_TYPE ]]; then
  $BASEDIR/bin/pkg -t ohmyzsh $ORIG_ARGS
  $BASEDIR/bin/pkg -t brew $ORIG_ARGS
  $BASEDIR/bin/pkg -t pip  $ORIG_ARGS
  exit 0
fi

PKG_TYPE=$PKG_TYPE[2]
FILE=$FILE[2]
if [[ ! $FILE ]]; then
  FILE="${DEFAULT_FILES[${PKG_TYPE}]}"
fi
FILENAME="${FILE##*/}"

# if no mode set, set defaults
if [[ ! $UPDATE_MODE && ! $INSTALL_MODE && ! $UPGRADE_MODE && ! $SAVE_MODE ]]; then
  if [[ $PKG_TYPE -eq 'ohmyzsh' ]]; then
    UPDATE_MODE=1
  else
    UPDATE_MODE=1
    INSTALL_MODE=1
    UPGRADE_MODE=1
    SAVE_MODE=1
  fi
fi

if [[ $DEBUG_MODE ]]; then
  echo "PKG_TYPE:     $PKG_TYPE"
  echo "FILE:         $FILE"
  echo "FILENAME:     $FILENAME"
  echo "FAST_MODE     $FAST_MODE"
  echo "UPGRADE_MDE:  $UPGRADE_MODE"
  echo "UPDATE_MOE:   $UPDATE_MODE"
  echo "INSTALL_MDE:  $INSTALL_MODE"
  echo "SAVE_MODE     $SAVE_MODE"
  echo "HELP_MODE     $HELP_MODE"
  echo "DEBUG_MOD:    $DEBUG_MODE"
  exit 0
fi

# Update package manager
if [[ $UPDATE_MODE ]]; then
  if [[ $FAST_MODE ]] || yes_no "Would you like to update ${PKG_TYPE} (recommended)?"; then
    pkg_update $PKG_TYPE
  fi
fi

# Install packages from file
if [[ $INSTALL_MODE ]]; then
  pkg_check_diff_and_do "pkg_install $PKG_TYPE $FILE" "Would you like to install ${PKG_TYPE} packages (right)?"
fi

# Upgrade local packages
if [[ $UPGRADE_MODE ]]; then
  if [[ $FAST_MODE ]]; then
    pkg_upgrade $PKG_TYPE
  else
    pkg_outdated $PKG_TYPE
    if yes_no "Would you like to upgrade local ${PKG_TYPE} packages?"; then
      pkg_upgrade $PKG_TYPE
    fi
  fi
fi

# Save to file
if [[ $SAVE_MODE ]]; then
  pkg_check_diff_and_do "pkg_save $PKG_TYPE $FILE" "Would you like to save local ${PKG_TYPE} packages (left) to ${FILENAME} (right)?"
fi
